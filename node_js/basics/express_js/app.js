// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    //      Import Files Ans Set Data Starts
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  
	const path = require('path');

	const express = require('express');

	const rootDir = require('./utils/path');

	const bodyParser = require('body-parser');


	const app = express();
	app.use(bodyParser.urlencoded({ extended: false }));
	app.use(express.static(path.join(rootDir, 'public')));


	// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    //      Import Models And DBs Starts
	// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


		const mongodbConnect = require('./utils/db/database-mongodb');

    
	// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
						//      Import Models And DBs Ends
	// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  


// -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    // View Engine Configuration Starts
// -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    // EJS Configuration starts
    // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        app.set('view engine', 'ejs');

        app.set('views', path.join(rootDir, 'views'));

    // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    // EJS Configuration starts
    // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    // View Engine Configuration Ends
// -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                //  Import Routes Starts
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    const adminRoutes = require('./routes/admin');

    const shopRoutes = require('./routes/shop');

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    //  Import Routes ends
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                        //      Middleware Starts
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// storing the user in your middleware to access through out the application like session
	app.use((req, res, next) => {
		
		// User.findByPk(1)
			
		// 	.then(user => {
		// 		req.user = user;
		// 		next();
		// 	})
		// 	.catch(err => console.log(err))
		// ;
	});

	app.use('/admin', adminRoutes);

	app.use(shopRoutes);

    // ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                //      Controllers Starts
    // ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        
        const errorController = require('./controllers/errors');

        app.use('/', errorController.get404Page);

    // ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            //      Controllers Ends
    // ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            //      Middleware Ends
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            //      Mongodb Starts
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// This () => {}  is a callback function passed as a actual parameter 
	// to get executed inside some other function as formal parameter
	mongodbConnect( (client) => {
		// console.log(client)
		app.listen(3000);
	} );

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            //      Mongodb Ends
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------





// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            //      Sequelize Starts
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// Every Product belongs to some user, so products table contains a user id 
//    Product.belongsTo(User, { constraints: true, onDelete: 'CASCADE' });
//    User.hasMany(Product);

// 	User.hasOne(Cart);
	
// 	// Every Cart belongs to some user, so carts table contains a user id  
// 	Cart.belongsTo(User);
	
// 	// Every cart contains some products as cart item, this cart items table cart id
// 	Cart.belongsToMany(Product, { through: CartItem });

// 	// Every product can be cart item, this cart items table product id
// 	Product.belongsToMany(Cart, { through: CartItem });

// 	sequelize
// 		// .sync({ force: true })
// 		.sync()
// 		.then(result => {
// 			return User.findByPk(1);
// 			// console.log(result);
// 		})
// 		.then(user => {
// 			if (!user) {
// 				return User.create({ name: 'NARENDRA PANDEY', email: 'narendrapandey@gmail.com' });
// 			}
// 			return user;
// 		})
// 		.then(user => {
// 			// console.log(user);
// 			// return user.createCart();
// 			return 1;
// 		})
// 		.then((cart) => {
// 			app.listen(3000);
// 		})
// 		.catch(err => {
// 			console.log(err);
// 		})
// 	;

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            //      Sequelize Ends
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




// app.listen(3000);